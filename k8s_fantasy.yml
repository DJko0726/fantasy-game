# Node Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fantasy-backend
  labels:
    app: fantasy-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fantasy-service  
  template:
    metadata:
      labels:
        app: fantasy-service
    spec:
      containers:
      - name: fantasy-service
        image: fantasy/backend:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        ports:
        - containerPort: 3000
      #   volumeMounts:
      #   - name: backend
      #     mountPath: /app
      # volumes:
      #   - name: backend
      #     hostPath:
      #       path: /home/koko/project/fantasy-game
      #       type: Directory

---
# Node Service 30001 -> pods 80
apiVersion: v1
kind: Service
metadata:
  name: fantasy-service
  labels:
    app: fantasy-service
spec:
  type: NodePort
  selector:
    app: fantasy-service #pods labels 
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
    nodePort: 30001
---
# Postgres Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
  labels:
    app: postgres-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
      - name: postgres-db
        image: postgres:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: PGDATA
          value: /data/postgres
        volumeMounts:
        - name: postgres-data
          mountPath: /data/postgres
      volumes:
        - name: postgres-data
          hostPath:
            path: /var/lib/docker/volumes/fantasy-game_postgres/_data
            type: Directory
---
# Postgres Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  labels:
    app: postgres-db
spec:
  ports:
  - port: 5432
    protocol: TCP
  selector:
    app: postgres-db
---
#pvc
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fantasy-game-postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: manual
  resources:
    requests:
      storage: 5Gi
---
#pv
apiVersion: v1
kind: PersistentVolume
metadata:
  name: fantasy-game-postgres-pv
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /var/lib/docker/volumes/fantasy-game_postgres/_data
